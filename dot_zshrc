# First set your theme and config before sourcing oh-my-zsh
ZSH_THEME=""  # Empty for Starship

# Path to your oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"
export EDITOR=nvim
export SUDO_EDITOR=nvim

# Which plugins would you like to load?
plugins=(
  1password
  chezmoi
  fluxcd
  fzf
  genpass
  golang
  git-extras
  gitfast
  history
  knife
  node
  podman
  python
  rust
  starship
  alias-finder
  buf
  direnv
  docker-compose
  encode64
  gh
  github
  history-substring-search
  vault
  vscode
  terraform
  ssh
  postgres
  npm
  multipass
  helm
  gcloud
  eza
  ansible
  argocd
  istioctl
  nvm
  sudo
  tailscale
  torrent
  zoxide
  uv
  tldr
  thefuck
  gnu-utils
  brew
  bazel
  kubectl
  emoji
  encode64
  kube-ps1
  wd
)

# Load Homebrew completions
export HOMEBREW_PREFIX=$(/opt/homebrew/bin/brew --prefix)
fpath=("$HOMEBREW_PREFIX/share/zsh/site-functions" "$HOME/.docker/completions" $fpath)

# Source oh-my-zsh
source $ZSH/oh-my-zsh.sh

# autocomplete
if type brew &>/dev/null; then
  FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions:${FPATH}"
  autoload -Uz compinit
  compinit
fi

# go, brew paths
export PATH="$HOME/go/bin:$HOMEBREW_PREFIX/bin:$PATH"

# Enable persistent history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# Share history between all Zsh sessions
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_FIND_NO_DUPS
setopt INC_APPEND_HISTORY

# Load aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# NVM configuration
  export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Direnv hook
eval "$(direnv hook zsh)"

# Path additions
export PATH="$HOME/.cargo/bin:$PATH:/usr/local/google-cloud-sdk/bin"
export PATH="/opt/homebrew/bin:$PATH"
# export NODE_OPTIONS="--no-deprecation"

# Google Cloud SDK
if [ -f '/usr/local/google-cloud-sdk/path.zsh.inc' ]; then 
  source '/usr/local/google-cloud-sdk/path.zsh.inc'
fi
if [ -f '/usr/local/google-cloud-sdk/completion.zsh.inc' ]; then 
  source '/usr/local/google-cloud-sdk/completion.zsh.inc'
fi

# Thefuck alias
eval $(thefuck --alias)

if [ -f "$HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
  source "$HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi
if [ -f "$HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "$HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# TCL-TK configuration
export LDFLAGS="-L$(brew --prefix tcl-tk)/lib"
export CPPFLAGS="-I$(brew --prefix tcl-tk)/include"
export PKG_CONFIG_PATH="$(brew --prefix tcl-tk)/lib/pkgconfig"
export PATH="$(brew --prefix tcl-tk)/bin:$PATH"

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# OpenSSL configuration
# export LDFLAGS="-L/opt/homebrew/opt/openssl@3/lib"
# export CPPFLAGS="-I/opt/homebrew/opt/openssl@3/include"
# export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@3/lib/pkgconfig"
# export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
# export PATH="/opt/homebrew/opt/curl/bin:$PATH"

# Key bindings
bindkey "^[[A" up-line-or-search
bindkey "^[[B" down-line-or-search

compdef kubecolor=kubectl
# [ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases

# fzf
source <(fzf --zsh)

# zoxide
eval "$(zoxide init --cmd cd zsh)"

# menu autocomplete
zstyle ':completion:*' menu select

alias kubectl=kubecolor
export KUBE_EDITOR="$HOME/.local/bin/kube-edit.sh"
if [ -f $HOME/.zshuv ]; then
  source $HOME/.zshuv
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -d '$HOME/Developer/google-cloud-sdk/bin' ]; then export PATH="$PATH:$HOME/Developer/google-cloud-sdk/bin"; fi
if [ -f '$HOME/Developer/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/Developer/google-cloud-sdk/completion.zsh.inc'; fi

source $HOME/.zshenv

if [ -f "$HOME/.local/bin/env" ]; then source "$HOME/.local/bin/env"; fi
# Load Rust environment
if [ -f "$HOME/.cargo/env" ]; then source "$HOME/.cargo/env"; fi
[[ "$TERM_PROGRAM" == "vscode" ]] && . "$(code --locate-shell-integration-path zsh)"

#export TERM=xterm-256color

export PATH="/opt/homebrew/sbin:$PATH"

if [ -f "$HOME/.atuin/bin/env" ]; then
  source "$HOME/.atuin/bin/env"
fi

eval "$(starship init zsh)"

# source cargo env
if [ -f "$HOME/.cargo/env" ]; then
  source "$HOME/.cargo/env"
fi
